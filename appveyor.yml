# Configuration for AppVeyor Continuous Integration Service
#
# Build status: https://ci.appveyor.com/project/ezralanglois/interop
#
# Tested configurations:
#
#   Visual Studio 14 2015
#     - Release/Debug
#     - 64-bit
#   Visual Studio 12 2013
#     - Release/Debug
#     - 64-bit
#   MinGW
#     - Release/Debug
#     - 64-bit
#
# Removed support for 32-bit compilers
#
# C# Compiler is always .NET v4.0.30319
#
# TODO: Why does enabling CRT fail on appveyor?

configuration:
  - Debug
  - Release

cache:
  - x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
  - C:\mingw64

environment:
  MINGW_URL: http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/4.9.2/threads-win32/seh/x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z/download
  MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z
  matrix:
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64
      config_type: win64
      PACKAGE_PYTHON_TARGET: package_wheel
#    - generator: "Visual Studio 14 2015"
#      BUILD: msvc14_win32
#      config_type: win32
#    - generator: "Visual Studio 12 2013 Win64"
#      BUILD: msvc12_win64
#      config_type: win64
#    - generator: "Visual Studio 12 2013"
#      BUILD: msvc12_win32
#      config_type: win32
#    - generator: "MinGW Makefiles"
#      COMPILER_PATH: C:\MinGW\bin
#      BUILD: mingw_win32
#      config_type: win32
    - generator: "MinGW Makefiles"
      COMPILER_PATH: C:\mingw64\bin
      BUILD: mingw_win64
      config_type: win64
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_PYTHON=OFF
      PACKAGE_PYTHON_TARGET: package

before_build:
  - cmd: set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmd: set PATH=%COMPILER_PATH%;%PATH%
  - cmd: set PATH=C:\Miniconda-x64;C:\Miniconda-x64\Scripts;%PATH%
  - cmd: conda install numpy -y

install:
  - cmd: date /T & time /T
  - ps: |
      if (Test-Path "C:/ProgramData/chocolatey/bin/swig.exe") {
          echo "using swig from cache"
      } else {
          choco install swig --version 3.0.5 -y > $null
      }
  - if not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - if not exist "C:\mingw64" 7z x -oC:\ -y "%MINGW_ARCHIVE%" > nul

build_script:
  - set BUILD_PATH=%CD%\%BUILD%_%configuration%
  - cmake --version
  - cmake ../ -G "%GENERATOR%" -H. -Bbuild -DCMAKE_BUILD_TYPE="%configuration%" -DCMAKE_INSTALL_PREFIX=%BUILD_PATH% -DPACKAGE_OUTPUT_FILE_PREFIX=%CD% %ADDIONAL_CONFIG_OPTIONS%
  - cmake --build build --config "%configuration%"
  - cmake --build build --config "%configuration%" --target install
  - cmake --build build --target %PACKAGE_PYTHON_TARGET%

test_script:
  - cmake --build build --config "%configuration%" --target check

after_build:
  - echo "%BUILD_PATH%"
  - mkdir builds
  - 7z a interop-%BUILD%_%configuration%.zip %BUILD_PATH%

artifacts:
  - path: .\*.zip
    name: Releases
  - path: .\*.whl
    name: PythonRelease

branches:
  only:
  - make-python-public
  - /v\d\.\d\.\d/

deploy:
  provider: GitHub
  description: 'Release description'
  artifact: /interop-.*\.zip/,/.*\.whl/
  draft: true
  auth_token:
      secure: xPk9pZ2hYSMXoULnT7/9/FxBxb2Gn8rYHUDLCLocO1peevPcWdiQ9i/j6U3nJ45h
  on:
    appveyor_repo_tag: true
    configuration: Release
    config_type: win64

########################################################################################################################
#
# These settings allow one to Remote Desktop into the VM and check what went wrong:
#
########################################################################################################################

#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
